2LS version 0.3.4 (based on CBMC 5.4)
Parsing main.c
Converting
Type-checking main
file main.c line 6 function main: function `assert' is not declared
Generating GOTO Program
Adding CPROVER library
Generic Property Instrumentation
Function Pointer Removal
Performing full inlining
Using intervals domain with ACDL solver
Computing SSA of _start
Simplifying
(E) $guard#0 == TRUE

(E) __CPROVER_dead_object#2 == NULL

(E) __CPROVER_deallocated#3 == NULL

(E) __CPROVER_malloc_is_new_array#4 == FALSE

(E) __CPROVER_malloc_object#5 == NULL

(E) __CPROVER_malloc_size#6 == 0ul

(E) __CPROVER_memory_leak#7 == NULL

(E) __CPROVER_next_thread_id#8 == 0ul

(E) __CPROVER_pipe_count#9 == 0u

(E) __CPROVER_rounding_mode#10 == 0

(E) __CPROVER_thread_id#11 == 0ul

(E) __CPROVER_threads_exited#12 == ARRAY_OF(FALSE)

(E) x#16 == nondet_symbol(ssa::nondet16.1)

(E) y#18 == nondet_symbol(ssa::nondet18.1)

(E) x#19 == 1

(A) x#19 == 1 || !$guard#0

(E) main#return_value#23 == nondet_symbol(ssa::nondet23.1)


_start
Push: $guard#0 == TRUE
Not inserting nondet elements 
Not inserting nondet elements 
Push: x#19 == 1
Not inserting nondet elements 
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Not inserting nondet elements 
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Not inserting nondet elements 
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Not inserting nondet elements 
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Not inserting nondet elements 
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Not inserting nondet elements 
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Not inserting nondet elements 
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
The content of the sliced but unordered worklist is as follows: 
Sliced Unordered Worklist Element::$guard#0 == TRUE
Sliced Unordered Worklist Element::x#19 == 1
Leaf Element::$guard#0 == TRUE
Leaf Element::x#19 == 1
The content of the ordered worklist is as follows: 
Worklist Element::!(x#19 == 1 || !$guard#0)
Worklist Element::TRUE
Worklist Element::$guard#0 == TRUE
Worklist Element::x#19 == 1
Printing all live variables
ssa::$guard#0,
main::1::x#19,
Printing all decision variables inside solver
x#19  ,
********************************
        DEDUCTION PHASE 
********************************
Pop: !(x#19 == 1 || !$guard#0)
Computing old abstract value of implication graph: 
Old: 
[ACDL-DOMAIN] old value: 
DOMAIN projected live variables are: $guard#0x#19
[ACDL-DOMAIN] projected(ssa::$guard#0): 
deducing in SAT
actually deducing
[ACDL-DOMAIN] deductions(ssa::$guard#0): $guard#0 <== 

[ACDL-DOMAIN] projected(main::1::x#19): 
RESULT: 
Push: $guard#0 == TRUE
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Not inserting nondet elements 
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Not inserting nondet elements 
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Not inserting nondet elements 
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Push: !(x#19 == 1 || !$guard#0)
Popped Statement for live variables: !(x#19 == 1 || !$guard#0)
Variables in Popped Statement: $guard#0 x#19  
Live variables list are as follows: $guard#0x#19 
The content of the updated worklist is as follows: 
Updated Worklist Element::TRUE
Updated Worklist Element::$guard#0 == TRUE
Updated Worklist Element::x#19 == 1
Updated Worklist Element::!(x#19 == 1 || !$guard#0)
The updated live variables after removal are as follows: $guard#0x#19 
New: $guard#0
Computing new abstract value of implication graph: 
$guard#0
$guard#0
Pop: TRUE
Computing old abstract value of implication graph: 
$guard#0
Old: $guard#0
[ACDL-DOMAIN] old value: $guard#0
DOMAIN projected live variables are: 
Not inserting nondet elements 
Not inserting nondet elements 
Not inserting nondet elements 
Popped Statement for live variables: TRUE
Variables in Popped Statement:  
Live variables list are as follows: $guard#0x#19 
The content of the updated worklist is as follows: 
Updated Worklist Element::$guard#0 == TRUE
Updated Worklist Element::x#19 == 1
Updated Worklist Element::!(x#19 == 1 || !$guard#0)
The updated live variables after removal are as follows: $guard#0x#19 
New: 
Computing new abstract value of implication graph: 
$guard#0
Pop: $guard#0 == TRUE
Computing old abstract value of implication graph: 
$guard#0
Old: $guard#0
[ACDL-DOMAIN] old value: $guard#0
DOMAIN projected live variables are: $guard#0
[ACDL-DOMAIN] projected(ssa::$guard#0): 
deducing in SAT
actually deducing
[ACDL-DOMAIN] deductions(ssa::$guard#0): 
Not inserting nondet elements 
Not inserting nondet elements 
Not inserting nondet elements 
Popped Statement for live variables: $guard#0 == TRUE
Variables in Popped Statement: $guard#0  
Live variables list are as follows: $guard#0x#19 
The content of the updated worklist is as follows: 
Updated Worklist Element::x#19 == 1
Updated Worklist Element::!(x#19 == 1 || !$guard#0)
The updated live variables after removal are as follows: $guard#0x#19 
New: 
Computing new abstract value of implication graph: 
$guard#0
Pop: x#19 == 1
Computing old abstract value of implication graph: 
$guard#0
Old: $guard#0
[ACDL-DOMAIN] old value: $guard#0
DOMAIN projected live variables are: x#19
[ACDL-DOMAIN] projected(main::1::x#19): $guard#0
EXIT=0
SIGNAL=2
