file main.c: Parsing
Converting
Type-checking main
Generating GOTO Program
Adding CPROVER library
Partial Inlining
Generic Property Instrumentation
Function Pointer Removal
Using intervals domain with binary search solver
Computing SSA of main
Simplifying
Unwinding
*** 0 
(E) $guard#0 == TRUE

*** 1 
(E) $guard#1 == ($cond#0 && $guard#0)

*** 2 
(E) $guard#2 == ($cond#1 && $guard#1)


Computing SSA of c::__CPROVER_initialize
Simplifying
Unwinding
*** 3 file <built-in-additions> line 23
(E) __CPROVER_next_thread_id#3 == 0ul
(E) $guard#3 == TRUE

*** 4 file <built-in-additions> line 57
(E) __CPROVER_rounding_mode#4 == 0

*** 5 file <built-in-additions> line 30
(E) __CPROVER_deallocated#5 == NULL

*** 6 file <built-in-additions> line 31
(E) __CPROVER_dead_object#6 == NULL

*** 7 file <built-in-additions> line 32
(E) __CPROVER_malloc_object#7 == NULL

*** 8 file <built-in-additions> line 33
(E) __CPROVER_malloc_size#8 == 0ul

*** 9 file <built-in-additions> line 34
(E) __CPROVER_malloc_is_new_array#9 == FALSE

*** 10 file <built-in-additions> line 35
(E) __CPROVER_memory_leak#10 == NULL

*** 11 file <built-in-additions> line 78
(E) __CPROVER_pipe_count#11 == 0u

*** 12 file <built-in-additions> line 22
(E) __CPROVER_threads_exited#12 == ARRAY_OF(FALSE)


Computing SSA of c::main
Simplifying
Unwinding
*** 14 file main.c line 4 function main
(E) $guard#14 == TRUE

*** 18 file main.c line 9 function main
(E) i#18 == 0

*** 19 file main.c line 9 function main
(E) B#phi19 == ($guard#ls23 ? B#lb23 : B#15)
(E) i#phi19 == ($guard#ls23 ? i#lb23 : i#18)
(E) tmp#phi19 == ($guard#ls23 ? tmp#lb23 : tmp#17)
(E) $cond#19 == !(i#phi19 < 2048)
(E) $guard#19 == $guard#14

*** 20 file main.c line 10 function main
(E) tmp#20 == A#14[(signed long int)i#phi19]
(E) $guard#20 == (!$cond#19 && $guard#19)

*** 21 file main.c line 11 function main
(E) B#21 == B#phi19 WITH [(signed long int)i#phi19:=tmp#20]

*** 22 file main.c line 9 function main
(E) i#22 == 1 + i#phi19

*** 23 file main.c line 9 function main
(E) $cond#23 == TRUE

*** 24 file main.c line 14 function main
(E) $guard#24 == ($cond#19 && $guard#19)
(A) A#14[5l] == B#phi19[5l] || !$guard#24

*** 29 file main.c line 15 function main
(E) main#return_value#29 == nondet_symbol(ssa::nondet29.1)

*** 30 file main.c line 15 function main
(E) $cond#30 == TRUE

*** 31 file main.c line 15 function main
(E) $guard#31 == ($cond#30 && $guard#24)



Summarizing function main
Function body for main to be analyzed: 
(E) $guard#1 == ($cond#0 && $guard#0)
(E) $guard#0 == TRUE
(E) $guard#2 == ($cond#1 && $guard#1)


pre-inv: TRUE
post-inv: 
solver(): UNSAT

Summary for function main
params: 
returns: 
globals_in: 
globals_out: 
precondition: TRUE
transformer: TRUE

Adding loop invariant: TRUE

Summarizing function c::__CPROVER_initialize
Function body for c::__CPROVER_initialize to be analyzed: 
(E) __CPROVER_dead_object#6 == NULL
(E) __CPROVER_pipe_count#11 == 0u
(E) __CPROVER_deallocated#5 == NULL
(E) __CPROVER_memory_leak#10 == NULL
(E) __CPROVER_rounding_mode#4 == 0
(E) __CPROVER_next_thread_id#3 == 0ul
(E) $guard#3 == TRUE
(E) __CPROVER_threads_exited#12 == ARRAY_OF(FALSE)
(E) __CPROVER_malloc_object#7 == NULL
(E) __CPROVER_malloc_is_new_array#9 == FALSE
(E) __CPROVER_malloc_size#8 == 0ul

(OUT)  $guard#3 ===> 
      ( __CPROVER_rounding_mode#4 <= CONST )
(OUT)  $guard#3 ===> 
      ( -((signed int)__CPROVER_rounding_mode#4) <= CONST )
(OUT)  $guard#3 ===> 
      ( __CPROVER_pipe_count#11 <= CONST )
(OUT)  $guard#3 ===> 
      ( -((signed __CPROVER_bitvector[33])__CPROVER_pipe_count#11) <= CONST )
(OUT)  $guard#3 ===> 
      ( __CPROVER_malloc_size#8 <= CONST )
(OUT)  $guard#3 ===> 
      ( -((signed __CPROVER_bitvector[65])__CPROVER_malloc_size#8) <= CONST )
(OUT)  $guard#3 ===> 
      ( __CPROVER_next_thread_id#3 <= CONST )
(OUT)  $guard#3 ===> 
      ( -((signed __CPROVER_bitvector[65])__CPROVER_next_thread_id#3) <= CONST )

pre-inv: TRUE && TRUE && TRUE && TRUE && TRUE && TRUE && TRUE && TRUE
post-inv: !($guard#3 ==> FALSE) || !($guard#3 ==> FALSE) || !($guard#3 ==> FALSE) || !($guard#3 ==> FALSE) || !($guard#3 ==> FALSE) || !($guard#3 ==> FALSE) || !($guard#3 ==> FALSE) || !($guard#3 ==> FALSE)
solver(): SAT
updating row: 0
raw value; 0, simplified value: 0
updating row: 1
raw value; -((signed int)0), simplified value: 0
updating row: 2
raw value; 0u, simplified value: 0u
updating row: 3
raw value; -((signed __CPROVER_bitvector[33])0u), simplified value: 0
updating row: 4
raw value; 0ul, simplified value: 0ul
updating row: 5
raw value; -((signed __CPROVER_bitvector[65])0ul), simplified value: 0
updating row: 6
raw value; 0ul, simplified value: 0ul
updating row: 7
raw value; -((signed __CPROVER_bitvector[65])0ul), simplified value: 0
pre-inv: TRUE && TRUE && TRUE && TRUE && TRUE && TRUE && TRUE && TRUE
post-inv: !($guard#3 ==> __CPROVER_rounding_mode#4 <= 0) || !($guard#3 ==> -((signed int)__CPROVER_rounding_mode#4) <= 0) || !($guard#3 ==> __CPROVER_pipe_count#11 <= 0u) || !($guard#3 ==> -((signed __CPROVER_bitvector[33])__CPROVER_pipe_count#11) <= 0) || !($guard#3 ==> __CPROVER_malloc_size#8 <= 0ul) || !($guard#3 ==> -((signed __CPROVER_bitvector[65])__CPROVER_malloc_size#8) <= 0) || !($guard#3 ==> __CPROVER_next_thread_id#3 <= 0ul) || !($guard#3 ==> -((signed __CPROVER_bitvector[65])__CPROVER_next_thread_id#3) <= 0)
solver(): UNSAT

Summary for function c::__CPROVER_initialize
params: 
returns: 
globals_in: __CPROVER_threads_exited __CPROVER_malloc_is_new_array __CPROVER_dead_object __CPROVER_deallocated __CPROVER_malloc_object __CPROVER_memory_leak __CPROVER_rounding_mode __CPROVER_pipe_count __CPROVER_malloc_size __CPROVER_next_thread_id 
globals_out: __CPROVER_threads_exited#12 __CPROVER_malloc_is_new_array#9 __CPROVER_dead_object#6 __CPROVER_deallocated#5 __CPROVER_malloc_object#7 __CPROVER_memory_leak#10 __CPROVER_rounding_mode#4 __CPROVER_pipe_count#11 __CPROVER_malloc_size#8 __CPROVER_next_thread_id#3 
precondition: TRUE
transformer: __CPROVER_rounding_mode#4 <= 0 && -((signed int)__CPROVER_rounding_mode#4) <= 0 && __CPROVER_pipe_count#11 <= 0u && -((signed __CPROVER_bitvector[33])__CPROVER_pipe_count#11) <= 0 && __CPROVER_malloc_size#8 <= 0ul && -((signed __CPROVER_bitvector[65])__CPROVER_malloc_size#8) <= 0 && __CPROVER_next_thread_id#3 <= 0ul && -((signed __CPROVER_bitvector[65])__CPROVER_next_thread_id#3) <= 0

Adding loop invariant: TRUE

Summarizing function c::main
summarizer: ../domains/template_domain.cpp:610: static void template_domaint::make_interval_template(template_domaint::templatet&, const var_listt&, const guardst&, const guardst&, const kindst&, const namespacet&): Assertion `vars.size() == pre_guards.size()' failed.
Function body for c::main to be analyzed: 
(E) $guard#31 == ($cond#30 && $guard#24)
(E) B#21 == B#phi19 WITH [(signed long int)i#phi19:=tmp#20]
(E) i#18 == 0
(E) $cond#23 == TRUE
(E) $guard#24 == ($cond#19 && $guard#19)
(A) A#14[5l] == B#phi19[5l] || !$guard#24
(E) tmp#20 == A#14[(signed long int)i#phi19]
(E) $guard#20 == (!$cond#19 && $guard#19)
(E) main#return_value#29 == nondet_symbol(ssa::nondet29.1)
(E) $cond#30 == TRUE
(E) $guard#14 == TRUE
(E) B#phi19 == ($guard#ls23 ? B#lb23 : B#15)
(E) i#phi19 == ($guard#ls23 ? i#lb23 : i#18)
(E) tmp#phi19 == ($guard#ls23 ? tmp#lb23 : tmp#17)
(E) $cond#19 == !(i#phi19 < 2048)
(E) $guard#19 == $guard#14
(E) i#22 == 1 + i#phi19

Aborted (core dumped)
EXIT=134
SIGNAL=0
