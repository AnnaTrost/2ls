SUMMARIZER version tbd
file /home/bjowac/deltacheck/branches/summary/regression/svcomp14/bitvector/byte_add_false.c: Parsing
Converting
Type-checking byte_add_false
Generating GOTO Program
Adding CPROVER library
Partial Inlining
Generic Property Instrumentation
Function Pointer Removal
Using equalities domain 
Computing SSA of main
Simplifying
Computing SSA of c::__CPROVER_initialize
Simplifying
Computing SSA of c::__VERIFIER_assert
Simplifying
Computing SSA of c::mp_add
Simplifying
Computing SSA of c::main
Simplifying

Summarizing function main

Summary for function main
params: 
returns: 
globals_in: 
globals_out: 
precondition: TRUE
transformer: TRUE

Adding loop invariant: TRUE

Summarizing function c::__CPROVER_initialize

Summary for function c::__CPROVER_initialize
params: 
returns: 
globals_in: __CPROVER_threads_exited __CPROVER_malloc_is_new_array __CPROVER_dead_object __CPROVER_deallocated __CPROVER_malloc_object __CPROVER_memory_leak __CPROVER_rounding_mode __CPROVER_pipe_count __CPROVER_malloc_size __CPROVER_next_thread_id 
globals_out: __CPROVER_threads_exited#5 __CPROVER_malloc_is_new_array#11 __CPROVER_dead_object#8 __CPROVER_deallocated#7 __CPROVER_malloc_object#9 __CPROVER_memory_leak#12 __CPROVER_rounding_mode#3 __CPROVER_pipe_count#4 __CPROVER_malloc_size#10 __CPROVER_next_thread_id#6 
precondition: TRUE
transformer: __CPROVER_rounding_mode#3 <= 0 && -((signed int)__CPROVER_rounding_mode#3) <= 0 && __CPROVER_pipe_count#4 <= 0u && -((signed __CPROVER_bitvector[33])__CPROVER_pipe_count#4) <= 0 && __CPROVER_malloc_size#10 <= 0ul && -((signed __CPROVER_bitvector[65])__CPROVER_malloc_size#10) <= 0 && __CPROVER_next_thread_id#6 <= 0ul && -((signed __CPROVER_bitvector[65])__CPROVER_next_thread_id#6) <= 0

Adding loop invariant: TRUE

Summarizing function c::__VERIFIER_assert

Summary for function c::__VERIFIER_assert
params: cond 
returns: 
globals_in: 
globals_out: 
precondition: TRUE
transformer: TRUE

Adding loop invariant: TRUE

Summarizing function c::mp_add

Summary for function c::mp_add
params: a b 
returns: 
globals_in: 
globals_out: mp_add#return_value#110 
precondition: TRUE
transformer: r0#lb97 == r1#lb97 && r0#lb97 == r2#lb97 && r0#lb97 == r3#lb97 && r0#lb97 == i#lb97 && r0#lb97 == r0#lb108 && r0#lb97 == r1#lb108 && r0#lb97 == r2#lb108 && r0#lb97 == r3#lb108 && r0#lb97 == i#lb108 && (unsigned char)r0#lb97 == mp_add#return_value#110 && r1#lb97 == r2#lb97 && r1#lb97 == r3#lb97 && r1#lb97 == i#lb97 && r1#lb97 == r0#lb108 && r1#lb97 == r1#lb108 && r1#lb97 == r2#lb108 && r1#lb97 == r3#lb108 && r1#lb97 == i#lb108 && (unsigned char)r1#lb97 == mp_add#return_value#110 && r2#lb97 == r3#lb97 && r2#lb97 == i#lb97 && r2#lb97 == r0#lb108 && r2#lb97 == r1#lb108 && r2#lb97 == r2#lb108 && r2#lb97 == r3#lb108 && r2#lb97 == i#lb108 && (unsigned char)r2#lb97 == mp_add#return_value#110 && r3#lb97 == i#lb97 && r3#lb97 == r0#lb108 && r3#lb97 == r1#lb108 && r3#lb97 == r2#lb108 && r3#lb97 == r3#lb108 && r3#lb97 == i#lb108 && (unsigned char)r3#lb97 == mp_add#return_value#110 && carry#lb97 == partial_sum#lb97 && carry#lb97 == (unsigned short int)r0#lb108 && carry#lb97 == (unsigned short int)r1#lb108 && carry#lb97 == (unsigned short int)r2#lb108 && carry#lb97 == (unsigned short int)r3#lb108 && carry#lb97 == (unsigned short int)i#lb108 && (unsigned short int)carry#lb97 == mp_add#return_value#110 && partial_sum#lb97 == (unsigned short int)r0#lb108 && partial_sum#lb97 == (unsigned short int)r1#lb108 && partial_sum#lb97 == (unsigned short int)r2#lb108 && partial_sum#lb97 == (unsigned short int)r3#lb108 && partial_sum#lb97 == (unsigned short int)i#lb108 && (unsigned short int)partial_sum#lb97 == mp_add#return_value#110 && i#lb97 == r0#lb108 && i#lb97 == r1#lb108 && i#lb97 == r2#lb108 && i#lb97 == r3#lb108 && i#lb97 == i#lb108 && (unsigned char)i#lb97 == mp_add#return_value#110 && r0#lb108 == r1#lb108 && r0#lb108 == r2#lb108 && r0#lb108 == r3#lb108 && r0#lb108 == i#lb108 && (unsigned char)r0#lb108 == mp_add#return_value#110 && r1#lb108 == r2#lb108 && r1#lb108 == r3#lb108 && r1#lb108 == i#lb108 && (unsigned char)r1#lb108 == mp_add#return_value#110 && r2#lb108 == r3#lb108 && r2#lb108 == i#lb108 && (unsigned char)r2#lb108 == mp_add#return_value#110 && r3#lb108 == i#lb108 && (unsigned char)r3#lb108 == mp_add#return_value#110 && (unsigned char)i#lb108 == mp_add#return_value#110

Adding loop invariant: r0#lb97 == r1#lb97 && r0#lb97 == r2#lb97 && r0#lb97 == r3#lb97 && r0#lb97 == i#lb97 && r0#lb97 == r0#lb108 && r0#lb97 == r1#lb108 && r0#lb97 == r2#lb108 && r0#lb97 == r3#lb108 && r0#lb97 == i#lb108 && (unsigned char)r0#lb97 == mp_add#return_value#110 && r1#lb97 == r2#lb97 && r1#lb97 == r3#lb97 && r1#lb97 == i#lb97 && r1#lb97 == r0#lb108 && r1#lb97 == r1#lb108 && r1#lb97 == r2#lb108 && r1#lb97 == r3#lb108 && r1#lb97 == i#lb108 && (unsigned char)r1#lb97 == mp_add#return_value#110 && r2#lb97 == r3#lb97 && r2#lb97 == i#lb97 && r2#lb97 == r0#lb108 && r2#lb97 == r1#lb108 && r2#lb97 == r2#lb108 && r2#lb97 == r3#lb108 && r2#lb97 == i#lb108 && (unsigned char)r2#lb97 == mp_add#return_value#110 && r3#lb97 == i#lb97 && r3#lb97 == r0#lb108 && r3#lb97 == r1#lb108 && r3#lb97 == r2#lb108 && r3#lb97 == r3#lb108 && r3#lb97 == i#lb108 && (unsigned char)r3#lb97 == mp_add#return_value#110 && carry#lb97 == partial_sum#lb97 && carry#lb97 == (unsigned short int)r0#lb108 && carry#lb97 == (unsigned short int)r1#lb108 && carry#lb97 == (unsigned short int)r2#lb108 && carry#lb97 == (unsigned short int)r3#lb108 && carry#lb97 == (unsigned short int)i#lb108 && (unsigned short int)carry#lb97 == mp_add#return_value#110 && partial_sum#lb97 == (unsigned short int)r0#lb108 && partial_sum#lb97 == (unsigned short int)r1#lb108 && partial_sum#lb97 == (unsigned short int)r2#lb108 && partial_sum#lb97 == (unsigned short int)r3#lb108 && partial_sum#lb97 == (unsigned short int)i#lb108 && (unsigned short int)partial_sum#lb97 == mp_add#return_value#110 && i#lb97 == r0#lb108 && i#lb97 == r1#lb108 && i#lb97 == r2#lb108 && i#lb97 == r3#lb108 && i#lb97 == i#lb108 && (unsigned char)i#lb97 == mp_add#return_value#110 && r0#lb108 == r1#lb108 && r0#lb108 == r2#lb108 && r0#lb108 == r3#lb108 && r0#lb108 == i#lb108 && (unsigned char)r0#lb108 == mp_add#return_value#110 && r1#lb108 == r2#lb108 && r1#lb108 == r3#lb108 && r1#lb108 == i#lb108 && (unsigned char)r1#lb108 == mp_add#return_value#110 && r2#lb108 == r3#lb108 && r2#lb108 == i#lb108 && (unsigned char)r2#lb108 == mp_add#return_value#110 && r3#lb108 == i#lb108 && (unsigned char)r3#lb108 == mp_add#return_value#110 && (unsigned char)i#lb108 == mp_add#return_value#110

Summarizing function c::main
Using existing summary for function c::mp_add
Replacing function c::mp_add
Using existing summary for function c::__VERIFIER_assert
Replacing function c::__VERIFIER_assert

Summary for function c::main
params: 
returns: 
globals_in: 
globals_out: main#return_value#137 mp_add#return_value#136 
precondition: TRUE
transformer: TRUE

Adding loop invariant: TRUE
Checking properties of main
Checking properties of c::__CPROVER_initialize
Checking properties of c::__VERIFIER_assert
negated property TRUE
Post-processing
Solving with MiniSAT 2.2.0 with simplifier
34 variables, 33 clauses
SAT checker: negated claim is SATISFIABLE, i.e., does not hold
Checking properties of c::mp_add
Checking properties of c::main
[__VERIFIER_assert.1.0] error label: FAILURE

** 1 of 1 failed
VERIFICATION FAILED
