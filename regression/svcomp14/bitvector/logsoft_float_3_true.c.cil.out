SUMMARIZER version tbd
file /home/bjowac/deltacheck/branches/summary/regression/svcomp14/bitvector/soft_float_3_true.c.cil.c: Parsing
Converting
Type-checking soft_float_3_true.c.cil
Generating GOTO Program
Adding CPROVER library
Partial Inlining
Generic Property Instrumentation
Function Pointer Removal
Using equalities domain 
Computing SSA of main
Simplifying
Computing SSA of c::__CPROVER_initialize
Simplifying
Computing SSA of c::__VERIFIER_assert
Simplifying
Computing SSA of c::base2flt
Simplifying
Computing SSA of c::addflt
Simplifying
Computing SSA of c::mulflt
Simplifying
Computing SSA of c::main
Simplifying

Summarizing function main

Summary for function main
params: 
returns: 
globals_in: 
globals_out: 
precondition: TRUE
transformer: TRUE

Adding loop invariant: TRUE

Summarizing function c::__CPROVER_initialize

Summary for function c::__CPROVER_initialize
params: 
returns: 
globals_in: __CPROVER_threads_exited __CPROVER_malloc_is_new_array __CPROVER_dead_object __CPROVER_deallocated __CPROVER_malloc_object __CPROVER_memory_leak __CPROVER_rounding_mode __CPROVER_pipe_count __CPROVER_malloc_size __CPROVER_next_thread_id 
globals_out: __CPROVER_threads_exited#5 __CPROVER_malloc_is_new_array#11 __CPROVER_dead_object#8 __CPROVER_deallocated#7 __CPROVER_malloc_object#9 __CPROVER_memory_leak#12 __CPROVER_rounding_mode#3 __CPROVER_pipe_count#4 __CPROVER_malloc_size#10 __CPROVER_next_thread_id#6 
precondition: TRUE
transformer: __CPROVER_rounding_mode#3 <= 0 && -((signed int)__CPROVER_rounding_mode#3) <= 0 && __CPROVER_pipe_count#4 <= 0u && -((signed __CPROVER_bitvector[33])__CPROVER_pipe_count#4) <= 0 && __CPROVER_malloc_size#10 <= 0ul && -((signed __CPROVER_bitvector[65])__CPROVER_malloc_size#10) <= 0 && __CPROVER_next_thread_id#6 <= 0ul && -((signed __CPROVER_bitvector[65])__CPROVER_next_thread_id#6) <= 0

Adding loop invariant: TRUE

Summarizing function c::__VERIFIER_assert

Summary for function c::__VERIFIER_assert
params: cond 
returns: 
globals_in: 
globals_out: 
precondition: TRUE
transformer: TRUE

Adding loop invariant: TRUE

Summarizing function c::base2flt

Summary for function c::base2flt
params: m e 
returns: 
globals_in: 
globals_out: base2flt#return_value#56 
precondition: TRUE
transformer: (signed __CPROVER_bitvector[33])m#lb37 == (signed __CPROVER_bitvector[33])e#lb37 && m#lb37 == m#lb51 && (signed __CPROVER_bitvector[33])m#lb37 == (signed __CPROVER_bitvector[33])e#lb51 && m#lb37 == base2flt#return_value#56 && (signed __CPROVER_bitvector[33])e#lb37 == (signed __CPROVER_bitvector[33])m#lb51 && e#lb37 == e#lb51 && (signed __CPROVER_bitvector[33])e#lb37 == (signed __CPROVER_bitvector[33])base2flt#return_value#56 && (signed __CPROVER_bitvector[33])m#lb51 == (signed __CPROVER_bitvector[33])e#lb51 && m#lb51 == base2flt#return_value#56 && (signed __CPROVER_bitvector[33])e#lb51 == (signed __CPROVER_bitvector[33])base2flt#return_value#56 && (signed __CPROVER_bitvector[33])m != (signed __CPROVER_bitvector[33])e#lb51 && (signed __CPROVER_bitvector[33])m#lb51 != (signed __CPROVER_bitvector[33])e#lb51

Adding loop invariant: (signed __CPROVER_bitvector[33])m#lb37 == (signed __CPROVER_bitvector[33])e#lb37 && m#lb37 == m#lb51 && (signed __CPROVER_bitvector[33])m#lb37 == (signed __CPROVER_bitvector[33])e#lb51 && m#lb37 == base2flt#return_value#56 && (signed __CPROVER_bitvector[33])e#lb37 == (signed __CPROVER_bitvector[33])m#lb51 && e#lb37 == e#lb51 && (signed __CPROVER_bitvector[33])e#lb37 == (signed __CPROVER_bitvector[33])base2flt#return_value#56 && (signed __CPROVER_bitvector[33])m#lb51 == (signed __CPROVER_bitvector[33])e#lb51 && m#lb51 == base2flt#return_value#56 && (signed __CPROVER_bitvector[33])e#lb51 == (signed __CPROVER_bitvector[33])base2flt#return_value#56 && (signed __CPROVER_bitvector[33])m != (signed __CPROVER_bitvector[33])e#lb51 && (signed __CPROVER_bitvector[33])m#lb51 != (signed __CPROVER_bitvector[33])e#lb51

Summarizing function c::addflt
Using existing summary for function c::__VERIFIER_assert
Replacing function c::__VERIFIER_assert
Using existing summary for function c::__VERIFIER_assert
Replacing function c::__VERIFIER_assert

Summary for function c::addflt
params: a b 
returns: 
globals_in: 
globals_out: addflt#return_value#99 
precondition: TRUE
transformer: TRUE

Adding loop invariant: TRUE

Summarizing function c::mulflt

Summary for function c::mulflt
params: a b 
returns: 
globals_in: 
globals_out: mulflt#return_value#162 
precondition: TRUE
transformer: TRUE

Adding loop invariant: TRUE

Summarizing function c::main
Using existing summary for function c::base2flt
Replacing function c::base2flt
Using existing summary for function c::mulflt
Replacing function c::mulflt
Using existing summary for function c::base2flt
Replacing function c::base2flt
Using existing summary for function c::base2flt
Replacing function c::base2flt
Using existing summary for function c::base2flt
Replacing function c::base2flt
Using existing summary for function c::__VERIFIER_assert
Replacing function c::__VERIFIER_assert

Summary for function c::main
params: 
returns: 
globals_in: 
globals_out: main#return_value#220 base2flt#return_value#phi219 mulflt#return_value#phi219 
precondition: TRUE
transformer: (signed __CPROVER_bitvector[33])main#return_value#220 == (signed __CPROVER_bitvector[33])base2flt#return_value#phi219 && (signed __CPROVER_bitvector[33])main#return_value#220 == (signed __CPROVER_bitvector[33])mulflt#return_value#phi219 && base2flt#return_value#phi219 == mulflt#return_value#phi219

Adding loop invariant: (signed __CPROVER_bitvector[33])main#return_value#220 == (signed __CPROVER_bitvector[33])base2flt#return_value#phi219 && (signed __CPROVER_bitvector[33])main#return_value#220 == (signed __CPROVER_bitvector[33])mulflt#return_value#phi219 && base2flt#return_value#phi219 == mulflt#return_value#phi219
Checking properties of main
Checking properties of c::__CPROVER_initialize
Checking properties of c::__VERIFIER_assert
negated property TRUE
Post-processing
Solving with MiniSAT 2.2.0 with simplifier
34 variables, 33 clauses
SAT checker: negated claim is SATISFIABLE, i.e., does not hold
Checking properties of c::base2flt
Checking properties of c::addflt
Checking properties of c::mulflt
Checking properties of c::main
[__VERIFIER_assert.1.0] error label: FAILURE

** 1 of 1 failed
VERIFICATION FAILED
