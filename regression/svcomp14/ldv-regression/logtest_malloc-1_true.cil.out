SUMMARIZER version tbd
file /home/bjowac/deltacheck/branches/summary/regression/svcomp14/ldv-regression/test_malloc-1_true.cil.c: Parsing
Converting
Type-checking test_malloc-1_true.cil
Generating GOTO Program
Adding CPROVER library
Partial Inlining
Generic Property Instrumentation
Function Pointer Removal
Using zones domain with binary search solver
Computing SSA of main
Simplifying
Computing SSA of c::__CPROVER_initialize
Simplifying
Computing SSA of c::malloc
Simplifying
Computing SSA of c::main
Simplifying

Summarizing function main
Recursively summarizing function c::main

Summary for function c::main
params: 
returns: 
globals_in: __CPROVER_malloc_is_new_array __CPROVER_deallocated __CPROVER_malloc_object __CPROVER_memory_leak __CPROVER_malloc_size 
globals_out: __CPROVER_malloc_is_new_array#80 __CPROVER_deallocated#76 __CPROVER_malloc_object#78 __CPROVER_memory_leak#82 main#return_value#104 __CPROVER_malloc_size#79 
precondition: TRUE
transformer: TRUE ==> (signed __CPROVER_bitvector[66])__CPROVER_malloc_size - (signed __CPROVER_bitvector[66])main#return_value#104 <= 18446744073709551615 && (signed int)main#return_value#104 - (signed int)__CPROVER_malloc_size <= 0 && (signed __CPROVER_bitvector[65])__CPROVER_malloc_size - (signed __CPROVER_bitvector[65])__CPROVER_malloc_size#79 <= 18446744073709551611 && (signed __CPROVER_bitvector[65])__CPROVER_malloc_size#79 - (signed __CPROVER_bitvector[65])__CPROVER_malloc_size <= 4 && main#return_value#104 <= 0 && -((signed int)main#return_value#104) <= 0 && (signed int)main#return_value#104 - (signed int)__CPROVER_malloc_size#79 <= 0 && (signed __CPROVER_bitvector[66])__CPROVER_malloc_size#79 - (signed __CPROVER_bitvector[66])main#return_value#104 <= 18446744073709551615 && __CPROVER_malloc_size#79 <= 18446744073709551615ul && -((signed __CPROVER_bitvector[65])__CPROVER_malloc_size#79) <= 0

Adding loop invariant: TRUE
Replacing function c::main
Recursively summarizing function c::__CPROVER_initialize

Summary for function c::__CPROVER_initialize
params: 
returns: 
globals_in: __CPROVER_threads_exited __CPROVER_malloc_is_new_array __CPROVER_dead_object __CPROVER_deallocated __CPROVER_malloc_object __CPROVER_memory_leak CURRENTLY_UNSAFE __CPROVER_rounding_mode __CPROVER_pipe_count __CPROVER_malloc_size __CPROVER_next_thread_id 
globals_out: __CPROVER_threads_exited#4 __CPROVER_malloc_is_new_array#10 __CPROVER_dead_object#7 __CPROVER_deallocated#6 __CPROVER_malloc_object#8 __CPROVER_memory_leak#11 CURRENTLY_UNSAFE#13 __CPROVER_rounding_mode#12 __CPROVER_pipe_count#3 __CPROVER_malloc_size#9 __CPROVER_next_thread_id#5 
precondition: TRUE
transformer: TRUE ==> CURRENTLY_UNSAFE#13 <= 0 && -((signed int)CURRENTLY_UNSAFE#13) <= 0 && __CPROVER_rounding_mode#12 <= 0 && -((signed int)__CPROVER_rounding_mode#12) <= 0 && __CPROVER_pipe_count#3 <= 0u && -((signed __CPROVER_bitvector[33])__CPROVER_pipe_count#3) <= 0 && __CPROVER_malloc_size#9 <= 0ul && -((signed __CPROVER_bitvector[65])__CPROVER_malloc_size#9) <= 0 && __CPROVER_next_thread_id#5 <= 0ul && -((signed __CPROVER_bitvector[65])__CPROVER_next_thread_id#5) <= 0

Adding loop invariant: TRUE
Replacing function c::__CPROVER_initialize

Summary for function main
params: 
returns: 
globals_in: 
globals_out: 
precondition: TRUE
transformer: TRUE ==> TRUE

Adding loop invariant: TRUE

Summarizing function c::__CPROVER_initialize
Summary for function c::__CPROVER_initialize exists already

Summarizing function c::malloc

Summary for function c::malloc
params: malloc_size 
returns: 
globals_in: __CPROVER_malloc_is_new_array __CPROVER_deallocated __CPROVER_malloc_object __CPROVER_memory_leak __CPROVER_malloc_size 
globals_out: __CPROVER_malloc_is_new_array#23 __CPROVER_deallocated#19 __CPROVER_malloc_object#21 __CPROVER_memory_leak#25 malloc#return_value#26 __CPROVER_malloc_size#22 
precondition: TRUE
transformer: TRUE ==> (signed __CPROVER_bitvector[65])malloc_size - (signed __CPROVER_bitvector[65])__CPROVER_malloc_size#22 <= 18446744073709551615 && (signed __CPROVER_bitvector[65])__CPROVER_malloc_size#22 - (signed __CPROVER_bitvector[65])malloc_size <= 18446744073709551615 && (signed __CPROVER_bitvector[65])__CPROVER_malloc_size - (signed __CPROVER_bitvector[65])__CPROVER_malloc_size#22 <= 18446744073709551615 && (signed __CPROVER_bitvector[65])__CPROVER_malloc_size#22 - (signed __CPROVER_bitvector[65])__CPROVER_malloc_size <= 18446744073709551615 && __CPROVER_malloc_size#22 <= 18446744073709551615ul && -((signed __CPROVER_bitvector[65])__CPROVER_malloc_size#22) <= 0

Adding loop invariant: TRUE

Summarizing function c::main
Summary for function c::main exists already
Checking properties of main
Checking properties of c::__CPROVER_initialize
Checking properties of c::malloc
Checking properties of c::main
negated property TRUE
Post-processing
Solving with MiniSAT 2.2.0 with simplifier
1004 variables, 1712 clauses
SAT checker inconsistent: negated claim is UNSATISFIABLE, i.e., holds
[main.1.0] error label: OK

** 0 of 1 failed
VERIFICATION SUCCESSFUL
